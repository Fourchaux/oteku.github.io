<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Les carnets d&#x27;Oteku</title>
        <link>https%3A//oteku.github.io</link>
        <description>Je m&#x27;appelle Thomas Haesslé, j&#x27;écris quelques essais dans ce carnet sur #ReasonML #OCaml #Rust</description>
        <generator>Zola</generator>
        <language>fr</language>
        <atom:link href="https%3A//oteku.github.io/tags/rust/rss.xml" rel="self" type="application/rss+xml"/>
        <lastBuildDate>Wed, 07 Aug 2019 00:00:00 +0000</lastBuildDate>
        
            <item>
                <title>Thead to the Future</title>
                <pubDate>Wed, 07 Aug 2019 00:00:00 +0000</pubDate>
                <link>https%3A//oteku.github.io/thread-to-the-future/</link>
                <guid>https%3A//oteku.github.io/thread-to-the-future/</guid>
                <description>&lt;p&gt;Je travaille actuellement sur un robot compagon nommé &lt;a href=&quot;https:&#x2F;&#x2F;www.cutii.io&#x2F;cutii&#x2F;&quot;&gt;Cutii&lt;&#x2F;a&gt; pour lequel nous avons besoins de communiquer sur port série entre le PC du robot et nos différentes cartes électronique, nous avons fait le choix il y a quelques mois d&#x27;implémenter une librairie de communication en Rust, afin de rendre plus sûrs et plus performants nos échanges. Ce billet vise à dresser un état des lieux de la gestion de communications asynchrones en Rust.&lt;&#x2F;p&gt;
&lt;p&gt;Pour illustrer les exemples, imaginons que nous ayons un protocole simplifié de communication, nous permettant de faire des &lt;strong&gt;GET&lt;&#x2F;strong&gt; et &lt;strong&gt;SET&lt;&#x2F;strong&gt; sur des valeur, en mode requête &#x2F; réponse et sur port série :&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#212733;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#5c6773;&quot;&gt;# requête GET pour une valeur foo
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffd580;&quot;&gt;foo?&lt;&#x2F;span&gt;&lt;span style=&quot;color:#95e6cb;&quot;&gt;\n
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5c6773;&quot;&gt;# réponse à la requête GET
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffd580;&quot;&gt;foo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;=1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#95e6cb;&quot;&gt;\n
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5c6773;&quot;&gt;# requête SET pour une valeur foo
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;foo=2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#95e6cb;&quot;&gt;\n
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5c6773;&quot;&gt;# réponse d&amp;#39;acquitement à la requête SET
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;foo=2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#95e6cb;&quot;&gt;\n
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Nous considérons que les messages sont toujours traité dans l&#x27;ordre des requêtes émises et que leur réponse est immédiate.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Ce protocole est suffisant pour les besoins de cet article, bien sûr il pourrait être remplacé par http, mqtt, enocean ou n&#x27;importe quel protocole industriel.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Outillons nous pour simuler ce protocole avec &lt;code&gt;echo&lt;&#x2F;code&gt;, &lt;code&gt;cat&lt;&#x2F;code&gt; et &lt;code&gt;socat&lt;&#x2F;code&gt; :&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#212733;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#5c6773;&quot;&gt;# In terminal 0, emulate a writable port &#x2F;tmp&#x2F;ttyS0 that passthrough the readable port &#x2F;tmp&#x2F;ttyS1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffd580;&quot;&gt;socat&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; PTY,link=&#x2F;tmp&#x2F;ttyS0,raw,echo=0 PTY,link=&#x2F;tmp&#x2F;ttyS1,raw,echo=0
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5c6773;&quot;&gt;# In terminal 1, read the port  &#x2F;tmp&#x2F;ttyS0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;cat&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt; -v &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; &#x2F;tmp&#x2F;ttyS0
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5c6773;&quot;&gt;# In terminal 2, read the port  &#x2F;tmp&#x2F;ttyS#
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;cat&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt; -v &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; &#x2F;tmp&#x2F;ttyS1
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5c6773;&quot;&gt;# In terminal 3, simulate the GET request
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;echo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt; -ne &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;#39;foo?\n&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; &#x2F;tmp&#x2F;ttyS0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;-ne &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;#39;foo=1\n&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; &#x2F;tmp&#x2F;ttyS1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;-ne &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;#39;foo=2\n&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; &#x2F;tmp&#x2F;ttyS0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;-ne &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;#39;foo=2\n&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; &#x2F;tmp&#x2F;ttyS1
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;em&gt;Implémenter la communication sur port série, ne nous intéresse pas vraiment ici, c&#x27;est un cas d&#x27;exemple qui pourrait être remplacé par des socket unix, socket tcp, ... aussi nous utiliserons la librairie &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;serialport&quot;&gt;serialport&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Notre objectif est bien sûr de mettre en place un processus de communication sur port série non bloquant, afin que le programme principale puisse effectuer d&#x27;autres traitements.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;premiere-version-les-threads&quot;&gt;Première version : les threads&lt;&#x2F;h1&gt;
&lt;p&gt;Chose très intéressante avec Rust, la librairie standard dispose de plusieurs pattern intéressants pour la programmation multi-threadée :&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;std&#x2F;sync&#x2F;struct.Arc.html&quot;&gt;Atomically Reference Counted&lt;&#x2F;a&gt; : &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;&#x2F;code&gt; fournit un &lt;em&gt;ownership&lt;&#x2F;em&gt; partagé pour une valeur de type &lt;code&gt;T&lt;&#x2F;code&gt;, &lt;em&gt;thread-safe&lt;&#x2F;em&gt; et allouée dans la &lt;em&gt;heap&lt;&#x2F;em&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;std&#x2F;sync&#x2F;struct.Mutex.html&quot;&gt;Mutex&lt;&#x2F;a&gt; : un mécanisme d&#x27;exclusion mutuelle pour protéger des données partagées entre plusieurs thread&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;static.rust-lang.org&#x2F;doc&#x2F;master&#x2F;std&#x2F;sync&#x2F;mpsc&#x2F;index.html&quot;&gt;Canaux de communication orientés messages&lt;&#x2F;a&gt; : le module &lt;code&gt;mspc&lt;&#x2F;code&gt; fournit les primitives de queue de communication &lt;em&gt;First In Fist Out&lt;&#x2F;em&gt; &lt;em&gt;multi-producer, single-consumer&lt;&#x2F;em&gt; qui permettent à un thread de collecter des informations issus de plusieurs autres threads.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Faisons un premier programme qui écrit la requete &lt;code&gt;foo?\n&lt;&#x2F;code&gt; sur le port &lt;code&gt;&#x2F;tmp&#x2F;ttyS0&lt;&#x2F;code&gt; et qui pour chaque requete envoie une valuer de foo incrémentée de 1, en utilisant un &lt;strong&gt;Mutex&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Le cheminement du programme peut être schématisé ainsi :&lt;&#x2F;p&gt;
&lt;p&gt;_thread1 &lt;em&gt;-[&#x2F;tmp&#x2F;ttyS0] &amp;quot;foo?\n&amp;quot; [&#x2F;tmp&#x2F;ttyS1]-&amp;gt;&lt;&#x2F;em&gt; _thread2 &lt;em&gt;- foo++ -&amp;gt;&lt;&#x2F;em&gt; thread3 &lt;em&gt;- [&#x2F;tmp&#x2F;ttyS0] &amp;quot;foo=1\n&amp;quot; [&#x2F;tmp&#x2F;ttyS1] -&amp;gt;&lt;&#x2F;em&gt; _thread0 &lt;em&gt;-&amp;gt; [stdout] &amp;quot;foo=1\n&amp;quot;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#212733;&quot;&gt;
&lt;span style=&quot;color:#ffa759;&quot;&gt;extern crate&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; serialport&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;use &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;serialport&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;prelude&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;use &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;std&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;io&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;use &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;std&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;sync&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;{Arc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; Mutex}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;use &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;std&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;time&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Duration&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;use &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;std&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;{env&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;str&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; thread}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;TTY0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;str &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;quot;&#x2F;tmp&#x2F;ttyS0&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;TTY1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;str &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;quot;&#x2F;tmp&#x2F;ttyS1&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;fn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffd580;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;() {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;let mut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; args &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;env&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;args()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; tty0_path &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; args&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;nth&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;unwrap_or_else&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(|| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;TTY0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;into&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; tty1_path &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; args&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;nth&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;unwrap_or_else&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(|| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;TTY1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;into&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;

    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;let mut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; settings&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; SerialPortSettings &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5ccfe6;&quot;&gt;Default&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;default()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;
    settings&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;timeout &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Duration&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;from_millis(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;
    settings&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;baud_rate &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;20&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;

    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5c6773;&quot;&gt;&#x2F;&#x2F; send foo? requests and print responses
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;match &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;serialport&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;open_with_settings(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;tty0_path&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;settings) {
        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5ccfe6;&quot;&gt;Ok&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;mut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; writer) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;{
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;let mut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; reader &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; writer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;try_clone&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;expect&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;quot;Failed to clone&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;

            &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5c6773;&quot;&gt;&#x2F;&#x2F; read the port and write to stdout
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; _thread0 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;thread&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Builder&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;new()
                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;quot;reader0&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;to_string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;())
                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;spawn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;move &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;|| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;{
                    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5c6773;&quot;&gt;&#x2F;&#x2F; a buffer of bytes
                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;let mut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; serial_buf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Vec&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;u8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;vec!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;1000&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;loop &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;{
                        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;match&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; reader&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;read&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(serial_buf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;as_mut_slice&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;()) {
                            &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5ccfe6;&quot;&gt;Ok&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(t) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;{
                                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; newline &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;= &amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;serial_buf[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;..&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;t]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;iter&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;position&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(|&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;b &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#95e6cb;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
                                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;if let &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5ccfe6;&quot;&gt;Some&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(n) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; newline {
                                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(line&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;_&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; serial_buf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;split_at&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;n)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
                                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;println!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(
                                        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;quot;reader0 thread : &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;{}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;,
                                        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5ccfe6;&quot;&gt;String&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;from_utf8(line&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;to_vec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;unwrap&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;()
                                    )&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
                                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;}
                            }
                            &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5ccfe6;&quot;&gt;Err&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;ref&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; e) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;io&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;ErrorKind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;TimedOut &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;,
                            &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5ccfe6;&quot;&gt;Err&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(e) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;eprintln!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;quot;{:?}&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; e)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;,
                        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;}
                        thread&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;sleep(Duration&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;from_millis(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;50&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;}
                })&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;

            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; _thread1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;thread&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Builder&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;new()
                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;quot;writer0&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;to_string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;())
                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;spawn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;move &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;|| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;loop &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;{
                    writer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;write&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;quot;foo?&lt;&#x2F;span&gt;&lt;span style=&quot;color:#95e6cb;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;expect&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;quot;Failed to write&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;thread&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;sleep(Duration&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;from_millis(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;50&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;})&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;}
        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5ccfe6;&quot;&gt;Err&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(e) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;{
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;eprintln!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;quot;Failed to open &lt;&#x2F;span&gt;&lt;span style=&quot;color:#95e6cb;&quot;&gt;\&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;{}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#95e6cb;&quot;&gt;\&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;. Error: {}&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;TTY0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; e)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;std&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;process&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;exit(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;}
    }

    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5c6773;&quot;&gt;&#x2F;&#x2F; Increment foo value on each request
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;match &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;serialport&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;open_with_settings(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;tty1_path&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;settings) {
        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5c6773;&quot;&gt;&#x2F;&#x2F; get the serial port for writer thread
        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5ccfe6;&quot;&gt;Ok&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;mut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; writer) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;{
            &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5c6773;&quot;&gt;&#x2F;&#x2F; clone serialport for reader thread
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;let mut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; reader &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; writer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;try_clone&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;expect&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;quot;Failed to clone&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
            &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5c6773;&quot;&gt;&#x2F;&#x2F; mutex to exchange data between threads
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; counter&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Arc&amp;lt;Mutex&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;i32&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;&amp;gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Arc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;new(Mutex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;new(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
            &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5c6773;&quot;&gt;&#x2F;&#x2F; clone Arc to access pointer from another thread
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; counter2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; counter&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;clone&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
            &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5c6773;&quot;&gt;&#x2F;&#x2F; read the port and write to stdout
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; _thread2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;thread&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Builder&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;new()
                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;quot;reader1&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;to_string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;())
                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;spawn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;move &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;|| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;{
                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;let mut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; serial_buf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Vec&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;u8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;vec!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;1000&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;loop &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;{
                        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;match&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; reader&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;read&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(serial_buf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;as_mut_slice&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;()) {
                            &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5ccfe6;&quot;&gt;Ok&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(t) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;{
                                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(line&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;_&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; serial_buf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;split_at&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(t)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
                                &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5c6773;&quot;&gt;&#x2F;&#x2F; get a lock on mutex and increment the value
                                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;let mut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; data &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; counter&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;lock&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;unwrap&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
                                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;data &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
                            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;}
                            &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5ccfe6;&quot;&gt;Err&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;ref&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; e) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;io&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;ErrorKind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;TimedOut &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;,
                            &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5ccfe6;&quot;&gt;Err&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(e) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;eprintln!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;quot;{:?}&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; e)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;,
                        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;}
                        thread&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;sleep(Duration&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;from_millis(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;50&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;}
                })&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;

            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; thread3 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;thread&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Builder&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;new()
                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;quot;writer1&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;to_string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;())
                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;spawn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;move &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;|| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;loop &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;{
                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; foo_value &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;= *&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;counter2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;lock&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;unwrap&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;let mut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; write_buf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Vec&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;u8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;vec!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;1000&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;
                    write_buf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;append&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;mut b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;quot;foo=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;to_vec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;
                    write_buf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;append&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;mut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; foo_value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;to_string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;as_bytes&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;to_vec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;
                    write_buf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;append&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;mut b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#95e6cb;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;to_vec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;
                    writer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;write&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(write_buf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;as_slice&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;expect&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;quot;Failed to write&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;thread&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;sleep(Duration&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;from_millis(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;50&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;})&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;
            thread3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;unwrap&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;join&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;unwrap&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5c6773;&quot;&gt;&#x2F;&#x2F;need to handle the last thread to avoid exit the program
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;}
        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5ccfe6;&quot;&gt;Err&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(e) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;{
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;eprintln!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;quot;Failed to open &lt;&#x2F;span&gt;&lt;span style=&quot;color:#95e6cb;&quot;&gt;\&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;{}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#95e6cb;&quot;&gt;\&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;. Error: {}&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;TTY1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; e)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;std&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;process&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;exit(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;}
    }
}
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Le &lt;strong&gt;Mutex&lt;&#x2F;strong&gt; est pratique pour partager une valeur entre plusieurs threads mais ne permet pas de savoir &lt;em&gt;quand&lt;&#x2F;em&gt; une valeur est mise à jour. Le code ci-dessus ne fonctionne que parce que les temporisations de threads sont égales, ce qui n&#x27;est pas satisfaisant. Nous pouvons améliorer cela grace au &lt;strong&gt;mpsc&lt;&#x2F;strong&gt;, en remplaçant le code des thread2 et thread3 par&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#212733;&quot;&gt;
&lt;span style=&quot;color:#f29e74;&quot;&gt;...
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5c6773;&quot;&gt;&#x2F;&#x2F; Increment foo value on each request
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;match &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;serialport&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;open_with_settings(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;tty1_path&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;settings) {
        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5c6773;&quot;&gt;&#x2F;&#x2F; get the serial port for writer thread
        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5ccfe6;&quot;&gt;Ok&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;mut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; writer) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;{
            &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5c6773;&quot;&gt;&#x2F;&#x2F; clone serialport for reader thread
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;let mut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; reader &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; writer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;try_clone&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;expect&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;quot;Failed to clone&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(tx&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; rx) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;channel&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
            &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5c6773;&quot;&gt;&#x2F;&#x2F; read the port and write to stdout
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; _thread2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;thread&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Builder&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;new()
                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;quot;reader1&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;to_string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;())
                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;spawn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;move &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;|| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;{
                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;let mut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; serial_buf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Vec&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;u8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;vec!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;1000&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;let mut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; data&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;i32 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;loop &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;{
                        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;match&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; reader&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;read&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(serial_buf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;as_mut_slice&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;()) {
                            &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5ccfe6;&quot;&gt;Ok&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(t) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;{
                                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(_line&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;_&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; serial_buf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;split_at&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(t)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
                                &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5c6773;&quot;&gt;&#x2F;&#x2F; increment the thread scoped var
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;                                data &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;+= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;
                                tx&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;send&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(data)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;unwrap&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
                            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;}
                            &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5ccfe6;&quot;&gt;Err&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;ref&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; e) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;kind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;io&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;ErrorKind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;TimedOut &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;,
                            &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5ccfe6;&quot;&gt;Err&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(e) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;eprintln!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;quot;{:?}&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; e)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;,
                        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;}
                        thread&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;sleep(Duration&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;from_millis(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;50&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;}
                })&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;

            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; thread3 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;thread&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Builder&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;new()
                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;quot;writer1&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;to_string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;())
                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;spawn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;move &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;|| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;loop &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;{
                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; foo_value &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; rx&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;recv&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;unwrap&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5c6773;&quot;&gt;&#x2F;&#x2F; wait until received a value from tx
                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;let mut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; write_buf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Vec&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;u8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;vec!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;1000&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;
                    write_buf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;append&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;mut b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;quot;foo=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;to_vec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;
                    write_buf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;append&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;mut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; foo_value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;to_string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;as_bytes&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;to_vec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;
                    write_buf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;append&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;mut b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#95e6cb;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;to_vec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;
                    writer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;write&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(write_buf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;as_slice&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;expect&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;quot;Failed to write&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;})&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;
            thread3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;unwrap&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;join&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;unwrap&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5c6773;&quot;&gt;&#x2F;&#x2F;need to handle the last thread to avoid exit the program
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;}
        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5ccfe6;&quot;&gt;Err&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(e) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;{
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;eprintln!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;quot;Failed to open &lt;&#x2F;span&gt;&lt;span style=&quot;color:#95e6cb;&quot;&gt;\&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;{}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#95e6cb;&quot;&gt;\&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;. Error: {}&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;TTY1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; e)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;std&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;process&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;exit(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;}
    }
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Nous avons maintenant réellement le fonctionnement voulu. Le fonctionnement de &lt;em&gt;channel&lt;&#x2F;em&gt; fournit nativement par Rust est vraiment pratique pour la communictaion entre threads, néanmoins on s&#x27;apperçoit avec ce cas trivial que cela demande beaucoup de code boilerplate et surtout on peut vite se perdre à la lecture du code quand on cherche à synchroniser plusieurs threads à partir de la mise à jour d&#x27;une donnée.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;NB : on accepte ici qu&#x27;une requête, il faudrait parser réellement les requêtes pour implémenter intégralement notre protocole.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h1 id=&quot;seconde-version-les-futures&quot;&gt;Seconde version : les futures&lt;&#x2F;h1&gt;
&lt;p&gt;Une &lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;std&#x2F;future&#x2F;trait.Future.html&quot;&gt;Future&lt;&#x2F;a&gt;, parfois appellée &lt;em&gt;promesse&lt;&#x2F;em&gt; dans d&#x27;autres langages, est un calcul asynchrone pouvant produire une valeur. Une &lt;strong&gt;Future&lt;&#x2F;strong&gt; en Rust est évaluée de manière paresseuse (Lazy evaluation), c&#x27;est à dire qu&#x27;elle ne font rien à moins d&#x27;être &lt;em&gt;amenée&lt;&#x2F;em&gt; à l&#x27;état &lt;code&gt;Ready&lt;&#x2F;code&gt;, pour cela elle doit être activement &lt;code&gt;poll&lt;&#x2F;code&gt;. Ce fonctionnement peut surprendre si vous êtes habitué aux promesses de javascript ou futures de java. Il est donc nécessaire de construire également un &lt;code&gt;executor&lt;&#x2F;code&gt; pour utiliser une &lt;strong&gt;Future&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Si on voulait réécrire l&#x27;équivalent des thread3 et 4, en considérant que nous avons un client séparé qui envoie les requête &lt;code&gt;foo?\n&lt;&#x2F;code&gt;, on voudrait avoir quelque chose de ce style :&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#212733;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#5c6773;&quot;&gt;&#x2F;&#x2F; Conceptual code : doesn&amp;#39;t work as is
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;fn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffd580;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;() {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;match &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;serialport&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;open_with_settings(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;tty1_path&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;settings) {
        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5ccfe6;&quot;&gt;Ok&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;mut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; writer) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;{
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;let mut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; reader &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; writer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;try_clone&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;expect&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;quot;Failed to clone&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(executor&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; spawner) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;new_executor_and_spawner&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;
            spawner&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;spawn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(
                SerialRead{
                    sp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;&amp;amp;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;writer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;
                    shared_state&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Arc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;new((Mutex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;new(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5ccfe6;&quot;&gt;None&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;))
                }&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;and_then&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;buffer &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;| SerialWrite{
                    sp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;&amp;amp;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;writer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;
                    data&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;build_write_buff_from_read_buff&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(buffer)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5c6773;&quot;&gt;&#x2F;&#x2F;build answer from request
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;                    shared_state&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Arc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;new((Mutex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;new(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5ccfe6;&quot;&gt;None&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;))
                })&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;map_err&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(|_| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;println!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;quot;failed&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;
            )&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;drop&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(spawner)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;
            executor&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;}
        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5ccfe6;&quot;&gt;Err&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(e) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;{
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;eprintln!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;quot;Failed to open &lt;&#x2F;span&gt;&lt;span style=&quot;color:#95e6cb;&quot;&gt;\&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;{}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#95e6cb;&quot;&gt;\&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;. Error: {}&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;TTY1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; e)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;std&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;process&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;exit(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;}
    }
}
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Utiliser les futures simplifie grandement la lecture du code au regard de la gestion des threads avec mpsc, mais créer ses Future n&#x27;est pas chose aisé. La struture &lt;code&gt;SerialRead&lt;&#x2F;code&gt;, par exemple, qui représente la lecture asynchrone sur le port série et qui implémente le trait &lt;code&gt;Future&lt;&#x2F;code&gt;, ressemblerait à ça&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#212733;&quot;&gt;
&lt;span style=&quot;color:#ffa759;&quot;&gt;use &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;std&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;future&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Future&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;use &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;std&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;sync&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;{Arc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; Mutex}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;use &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;std&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;task&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;{Context&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; Poll&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; Waker}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;use &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;std&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;pin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Pin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;pub struct &lt;&#x2F;span&gt;&lt;span style=&quot;color:#73d0ff;&quot;&gt;SerialRead&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;&amp;#39;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;&amp;gt; {
    sp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;&amp;#39;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; dyn SerialPort,
    shared_state&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Arc&amp;lt;Mutex&amp;lt;SharedState&amp;gt;&amp;gt;,
}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;struct &lt;&#x2F;span&gt;&lt;span style=&quot;color:#73d0ff;&quot;&gt;SharedState &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;{
    waker&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Option&amp;lt;Waker&amp;gt;,
}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;impl &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Future &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span style=&quot;color:#73d0ff;&quot;&gt;SerialRead&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;&amp;lt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;_&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;&amp;gt; {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#73d0ff;&quot;&gt;Output &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Vec&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;u8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;

    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;fn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffd580;&quot;&gt;poll&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;: Pin&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;mut Self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;&amp;gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;cx&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;mut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; Context) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;-&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Poll&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;Self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Output&amp;gt; {
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;let mut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; serial_buf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Vec&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;u8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;vec!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;1000&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;let mut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; shared_state &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5ccfe6;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;shared_state&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;lock&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;unwrap&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;if let &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5ccfe6;&quot;&gt;Ok&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(t) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5ccfe6;&quot;&gt;self
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;sp
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;try_clone&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;()
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;expect&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;quot;Failed to clone&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;)
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;read&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(serial_buf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;as_mut_slice&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;())
        {
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; newline &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;= &amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;serial_buf[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;..&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;t]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;iter&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;position&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(|&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;b &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#95e6cb;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;if let &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5ccfe6;&quot;&gt;Some&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(n) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; newline {
                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(line&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;_&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; serial_buf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;split_at&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;n)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Poll&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Ready(line&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;to_vec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;())
            } &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;else &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;{
                &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5c6773;&quot;&gt;&#x2F;&#x2F; The serial does not yet have data
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;                shared_state&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;waker &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5ccfe6;&quot;&gt;Some&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(cx&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;waker&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;clone&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Poll&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Pending
            }
        } &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;else &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;{
            &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5c6773;&quot;&gt;&#x2F;&#x2F; The serial port cannot be block for read.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;            shared_state&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;waker &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5ccfe6;&quot;&gt;Some&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(cx&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;waker&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;clone&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Poll&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Pending
        }
    }
}
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Les &lt;strong&gt;futures&lt;&#x2F;strong&gt; Rust sont assez bas niveau, le langage fournit le contrat : le trait ; charge à nous de l&#x27;implémenter. Du coup, quelques autres concepts sont nécessaires à appréhender comme les &lt;a href=&quot;https:&#x2F;&#x2F;rust-lang.github.io&#x2F;async-book&#x2F;02_execution&#x2F;03_wakeups.html&quot;&gt;Waker&lt;&#x2F;a&gt; et le &lt;a href=&quot;https:&#x2F;&#x2F;rust-lang.github.io&#x2F;async-book&#x2F;04_pinning&#x2F;01_chapter.html&quot;&gt;Pinning&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Il nous faut également écrire un &lt;a href=&quot;https:&#x2F;&#x2F;rust-lang.github.io&#x2F;async-book&#x2F;02_execution&#x2F;05_io.html&quot;&gt;Executor&lt;&#x2F;a&gt; qui va &lt;code&gt;poll&lt;&#x2F;code&gt; notre future jusqu&#x27;à l&#x27;atteinte d&#x27;une valeur de type &lt;code&gt;Poll::Ready&amp;lt;Output&amp;gt;&lt;&#x2F;code&gt; et les combinateurs &lt;code&gt;and_then&lt;&#x2F;code&gt;, &lt;code&gt;map_err&lt;&#x2F;code&gt; ou autres dont nous pourrions avoir besoin. La crates &lt;a href=&quot;https:&#x2F;&#x2F;rust-lang-nursery.github.io&#x2F;futures-api-docs&#x2F;0.3.0-alpha.18&#x2F;futures&#x2F;&quot;&gt;futures&lt;&#x2F;a&gt; qui a servi d&#x27;incubateur aux &lt;strong&gt;Futures&lt;&#x2F;strong&gt; fournit des modules qui peuvent faciliter la tâche. Néanmoins écrire un &lt;strong&gt;Executor&lt;&#x2F;strong&gt; est une tâche fastidieuse et complexe. Heureusement pour nous, il existe &lt;a href=&quot;https:&#x2F;&#x2F;tokio.rs&quot;&gt;Tokio&lt;&#x2F;a&gt; !&lt;&#x2F;p&gt;
&lt;h1 id=&quot;troisieme-version-futures-tokio&quot;&gt;Troisième version : futures ❤ Tokio&lt;&#x2F;h1&gt;
&lt;p&gt;Tokio est une plate-forme de gestion d&#x27;I&#x2F;O non bloquante, gérée par événement, permettant d&#x27;écrire des applications asynchrones avec Rust. À un niveau élevé, il fournit quelques composants majeurs:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Un planificateur de tâches multithreadées -&amp;gt; &lt;em&gt;similaire à la notion d&#x27;Executor vue précédement&lt;&#x2F;em&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Un &lt;strong&gt;Reactor&lt;&#x2F;strong&gt;, adossé à la file d’événements du système d’exploitation (epoll, kqueue, IOCP, etc…) -&amp;gt; &lt;em&gt;un Executor reactif ... dans d&#x27;autre système on l&#x27;appelerait Event Loop&lt;&#x2F;em&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Des sockets TCP et UDP asynchrones&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Au moment où j&#x27;écris cet artucle, le trait &lt;strong&gt;Future&lt;&#x2F;strong&gt; de Tokio, issu de la crate &lt;code&gt;futures&lt;&#x2F;code&gt; en version 0.1.x, est quelque peut différent de celui de la lib standard.
La version 0.3.0 de la crates Futures, actuellement en alpha, va s&#x27;aligner sur std::future::Future. Cependant il est aisé de passer de l&#x27;un à l&#x27;autre :&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#212733;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#5c6773;&quot;&gt;&#x2F;&#x2F; futures::future::Future (0.1.x)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;trait &lt;&#x2F;span&gt;&lt;span style=&quot;color:#73d0ff;&quot;&gt;Future &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;{
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#73d0ff;&quot;&gt;Item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#73d0ff;&quot;&gt;Error&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;

    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;fn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffd580;&quot;&gt;poll&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;mut &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;-&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Result&amp;lt;Async&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;Self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Item&amp;gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;Self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Error&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;enum &lt;&#x2F;span&gt;&lt;span style=&quot;color:#73d0ff;&quot;&gt;Async&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;&amp;lt;T&amp;gt; {
    Ready(T)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;
    NotReady&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;&lt;pre style=&quot;background-color:#212733;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#5c6773;&quot;&gt;&#x2F;&#x2F; std::future::Future &amp;amp; futures::future::Future (0.3.x)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;trait &lt;&#x2F;span&gt;&lt;span style=&quot;color:#73d0ff;&quot;&gt;Future &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;{
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#73d0ff;&quot;&gt;Output&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;

    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;fn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffd580;&quot;&gt;poll&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;: Pin&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;mut Self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;&amp;gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;cx&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;mut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; Context) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;-&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Poll&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;Self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Output&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;enum &lt;&#x2F;span&gt;&lt;span style=&quot;color:#73d0ff;&quot;&gt;Poll&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;&amp;lt;T&amp;gt; {
    Ready(T)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;
    Pending&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Tokio fournit aussi également le Trait &lt;strong&gt;Stream&lt;&#x2F;strong&gt;. Les Streams sont similaires aux Futures mais au lieu de retourner une unique valeur, ils donnent une ou plusieurs valeur de manière asynchrone.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#212733;&quot;&gt;
&lt;span style=&quot;color:#ffa759;&quot;&gt;trait &lt;&#x2F;span&gt;&lt;span style=&quot;color:#73d0ff;&quot;&gt;Stream &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;{
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#73d0ff;&quot;&gt;Item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#73d0ff;&quot;&gt;Error&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;

    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;fn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffd580;&quot;&gt;poll&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;mut &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;-&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Poll&amp;lt;Option&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;Self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Item&amp;gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;Self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Error&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Les Streams représentent bien ce que nous voulons faire avec notre serveur sur port série !&lt;&#x2F;p&gt;
&lt;p&gt;L&#x27;implémentation des Streams pour un port série existe déjà, nous allons donc utiliser la crate &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;berkowski&#x2F;tokio-serial&quot;&gt;tokio-serial&lt;&#x2F;a&gt;, il nous suffit de fournir un codec pour serialiser et déserialiser le contenu du port série.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#212733;&quot;&gt;
&lt;span style=&quot;color:#ffa759;&quot;&gt;extern crate&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; bytes&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;extern crate&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; futures&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;extern crate&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; tokio&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;extern crate&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; tokio_serial&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;use &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;bytes&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;{BufMut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; BytesMut}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;use &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;futures&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;{Future&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; Sink&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; Stream}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;use &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;std&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;{env&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;str&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;use &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;tokio&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;codec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;{Decoder&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; Encoder}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;DEFAULT_TTY&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;str &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;quot;&#x2F;tmp&#x2F;ttyS1&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;

#&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffd580;&quot;&gt;derive&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(Clone&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; Debug&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; Eq&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; PartialEq&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; Ord&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; PartialOrd&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; Hash)]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;struct &lt;&#x2F;span&gt;&lt;span style=&quot;color:#73d0ff;&quot;&gt;LineCodec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;impl &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Decoder &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span style=&quot;color:#73d0ff;&quot;&gt;LineCodec &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;{
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#73d0ff;&quot;&gt;Item &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5ccfe6;&quot;&gt;String&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#73d0ff;&quot;&gt;Error &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;std&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;io&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Error&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;

    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;fn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffd580;&quot;&gt;decode&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;mut &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;src&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;mut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; BytesMut) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;-&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Result&amp;lt;Option&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;Self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Item&amp;gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;Self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Error&amp;gt; {
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; newline &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; src&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;as_ref&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;iter&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;position&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(|&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;b &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#95e6cb;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;if let &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5ccfe6;&quot;&gt;Some&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(n) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; newline {
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; line &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; src&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;split_to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(n)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;
            src&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;take&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5c6773;&quot;&gt;&#x2F;&#x2F; flush the buffer
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;if let &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5ccfe6;&quot;&gt;Ok&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(s) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;str&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;from_utf8(line&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;as_ref&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;()) {
                &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5ccfe6;&quot;&gt;Ok&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5ccfe6;&quot;&gt;Some&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;to_string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;()))
            } &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;else &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;{
                &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5ccfe6;&quot;&gt;Err&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(std&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;io&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Error&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;new(
                    std&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;io&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;ErrorKind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Other&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;,
                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;quot;Invalid String&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;,
                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;))
            }
        } &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;else &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;{
            &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5ccfe6;&quot;&gt;Ok&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5ccfe6;&quot;&gt;None&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;)
        }
    }
}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;impl &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Encoder &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span style=&quot;color:#73d0ff;&quot;&gt;LineCodec &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;{
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#73d0ff;&quot;&gt;Item &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5ccfe6;&quot;&gt;String&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#73d0ff;&quot;&gt;Error &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;std&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;io&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Error&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;

    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;fn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffd580;&quot;&gt;encode&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;mut &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;Self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Item, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;dst&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;mut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; BytesMut) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;-&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Result&amp;lt;(), &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;Self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Error&amp;gt; {
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;println!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;quot;In writer &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;{:?}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;item)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;
        dst&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;reserve&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;len&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;
        dst&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;put&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(item)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;
        dst&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;put_u8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#95e6cb;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5ccfe6;&quot;&gt;Ok&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(())
    }
}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;fn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffd580;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;() {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;let mut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; args &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;env&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;args()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; tty_path &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; args&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;nth&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;unwrap_or_else&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(|| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;DEFAULT_TTY&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;into&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;

    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; settings &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;tokio_serial&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;SerialPortSettings&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;default()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5c6773;&quot;&gt;&#x2F;&#x2F;tokio_serial::Serial implements tokio::prelude::AsyncRead, tokio::prelude::AsyncWrite
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;let mut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; port &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;tokio_serial&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Serial&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;from_path(tty_path&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;settings)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;unwrap&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;if let &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5ccfe6;&quot;&gt;Err&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(e) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; port&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;set_exclusive&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;false&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;) {
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;eprintln!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;quot;Unable to set serial port exlusive{}&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; e)
    }&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5c6773;&quot;&gt;&#x2F;&#x2F; provide a tokio::codec::Framed and split it into a Sink and a Stream
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;mut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; writer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; reader) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; LineCodec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;framed&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(port)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;split&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; echo_server &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; reader
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;for_each&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;move &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;line&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;{
            &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5c6773;&quot;&gt;&#x2F;&#x2F; wait block the current thread until the future is resolved (similar with await from std)
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;_ = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;mut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; writer)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;send&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(line)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;wait&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
            &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5ccfe6;&quot;&gt;Ok&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(())
        })
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;map_err&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(|&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;eprintln!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;quot;{}&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; e))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5c6773;&quot;&gt;&#x2F;&#x2F; start the tokio runtime that will poll our future
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;tokio&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;run(echo_server)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Nous arrivons grâce aux futures à une version plus déclarative du code et surement plus facile à maintenir.
Les crates &lt;strong&gt;Tokio&lt;&#x2F;strong&gt; et &lt;strong&gt;futures&lt;&#x2F;strong&gt; nous fournissent les outils pour gérer relativement simplement nos &lt;em&gt;Futures&lt;&#x2F;em&gt; ce qui est appréciable. Nous l&#x27;avons peu aborder mais le fait que Tokio fournissent également des impléméntations génériques pour les &lt;a href=&quot;https:&#x2F;&#x2F;tokio.rs&#x2F;docs&#x2F;futures&#x2F;streams&#x2F;#adapters&quot;&gt;adapteurs de Streams&lt;&#x2F;a&gt; (for_earch, fold, or_else, take, filter, ...) et pour les &lt;a href=&quot;https:&#x2F;&#x2F;tokio.rs&#x2F;docs&#x2F;futures&#x2F;combinators&#x2F;#adapters&quot;&gt;Futures&lt;&#x2F;a&gt; (map, map_err, then, join, select, ...) nous facilite le travail.&lt;&#x2F;p&gt;
&lt;p&gt;Au final, nous sommes dans une période charnière car du côté de la librairie standard Rust la définition des &lt;code&gt;Futures&lt;&#x2F;code&gt; et de &lt;code&gt;async&#x2F;await&lt;&#x2F;code&gt; se stabilisent seulement, ce qui demande un travail de boilerplate important pour créer ses propres futures et leur exécuteur, de l&#x27;autre nous avons avec &lt;code&gt;Tokio&lt;&#x2F;code&gt; et &lt;code&gt;futures&lt;&#x2F;code&gt; un environnement fonctionnel qui nous permet de nous concentrer sur nos applications. La convergence est en cours, mais il faut laisser le temps à la chronologie de se dérouler (futures est en train de s&#x27;aligner, puis se sera Tokio et les projets basé sur Tokio). Malgré cela l&#x27;usage de Tokio est un tel &amp;quot;game changer&amp;quot; que je l&#x27;utiliserai dès à présent pour mes nouveaux besoins, notamment l&#x27;évolution de notre librairie sur socket.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Ce billet a été écrit au fur et à mesure de mes notes d&#x27;exploration, j&#x27;espère qu&#x27;il vous permettra de gagner du temps si vous vous avanturez sur le terrain des Futures Rust.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Rust my Node.js</title>
                <pubDate>Thu, 20 Jun 2019 00:00:00 +0000</pubDate>
                <link>https%3A//oteku.github.io/rust-my-node/</link>
                <guid>https%3A//oteku.github.io/rust-my-node/</guid>
                <description>&lt;p&gt;Si vous êtes développeur Node.js, vous vous confronterez tôt ou tard au développement d&#x27;addons natifs ... et à tout un lot de nouveaux problèmes : le langage C++ en lui même, mais également API V8, build system ou dépendance aux versions de V8. Pourtant dès que vous avez besoins de multi-threading, d&#x27;accès aux ressources machine ou même simplement pour réutiliser des librairies existantes vous n&#x27;y coupez pas. Ce billet vise à vous faire découvrir comment le langage Rust permet de rendre vos modules natifs &amp;quot;fast &amp;amp; safe&amp;quot;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;une-histoire-de-node&quot;&gt;Une histoire de Node&lt;&#x2F;h2&gt;
&lt;p&gt;J&#x27;aime beaucoup le runtime &lt;a href=&quot;https:&#x2F;&#x2F;nodejs.org&quot;&gt;Node.js&lt;&#x2F;a&gt; :&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;un écosystème impressionnant grâce à &lt;a href=&quot;https:&#x2F;&#x2F;www.npmjs.com&#x2F;&quot;&gt;npm&lt;&#x2F;a&gt;, qui se trouve être un excellent outil de gestion de dépendance, de sandboxing de projet et de publication de librairie ;&lt;&#x2F;li&gt;
&lt;li&gt;la communauté javascript est très prolifique, ce qui permet également de trouver beaucoup de librairies intéressante via npm ;&lt;&#x2F;li&gt;
&lt;li&gt;le runtime est très performant pour créer des API web et de manière générale, pour tout cas d&#x27;usage consommateur d&#x27;I&#x2F;O ;&lt;&#x2F;li&gt;
&lt;li&gt;le modèle de gestion de l&#x27;asynchronisme proposé par l&#x27;event-loop, mimant la webAPI JS, est également une force.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Tout ceci est supporté par une architecture robuste, rendue possible principalement grâce au moteur ECMAScript &lt;a href=&quot;https:&#x2F;&#x2F;v8.dev&#x2F;&quot;&gt;V8&lt;&#x2F;a&gt; et la librairie &lt;a href=&quot;http:&#x2F;&#x2F;libuv.org&#x2F;&quot;&gt;libuv&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;..&#x2F;img&#x2F;node.png&quot; alt=&quot;Node.js architecture&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Node.js est donc un runtime C&#x2F;C++ qui exécute du code Javascript. Cependant Javascript est un langage conçu initialement pour être exécuté dans un navigateur web. Pour des raisons de sécurité un certain nombre d&#x27;actions ne sont pas possible depuis un navigateur et de fait ne font pas parties des spécifications et API javascript. Par exemple l&#x27;accès direct au système de fichier ou aux périhériques réseaux ...&lt;&#x2F;p&gt;
&lt;p&gt;Node.js fournit donc une &lt;a href=&quot;https:&#x2F;&#x2F;nodejs.org&#x2F;dist&#x2F;latest-v12.x&#x2F;docs&#x2F;api&#x2F;&quot;&gt;API&lt;&#x2F;a&gt; permettant d&#x27;accéder à certaines des ces fonctionnalités pour réaliser de réelles applications serveur en Javascipt. En réalité, ces modules sont des programmes C++ qui expose des bindings Javascript grâce à l&#x27;API de V8. Ceci est &amp;quot;masqué&amp;quot; par Node.js quand vous utilisez des modules tels que &lt;code&gt;fs&lt;&#x2F;code&gt; ou &lt;code&gt;net&lt;&#x2F;code&gt;. Cepedant cette API ne pouvant être exhaustive, et pour ouvrir le champ des possibles, Node.js permet également de faire des addons C++ et d&#x27;exposer vos propres bindings.&lt;&#x2F;p&gt;
&lt;p&gt;Lorsque l&#x27;on développe une application pour Node.js nous pouvons donc faire du code Javascript ou du code C++ packagé sous forme d&#x27;addon.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;que-sont-ces-addons&quot;&gt;Que sont ces addons ?&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;Des « dynamically-linked shared objects », écrits en C++, en utilisant l’api V8 api, qui peuvent être importé par la fonction &lt;code&gt;require()&lt;&#x2F;code&gt; ;&lt;&#x2F;li&gt;
&lt;li&gt;des modules compilés dépendant de V8 et donc dépendants de la version de Node et de l&#x27;architecture du processeur.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Depuis Node 8, il existe &lt;a href=&quot;https:&#x2F;&#x2F;nodejs.org&#x2F;dist&#x2F;latest-v12.x&#x2F;docs&#x2F;api&#x2F;n-api.html&quot;&gt;n-api&lt;&#x2F;a&gt;, une abstraction indépendante de la version de V8.&lt;&#x2F;p&gt;
&lt;p&gt;Un addon doit donc être compilé pour chaque version de Node et chaque architecture. En général, il suffit de prévoir le build de l&#x27;addon dans le script npm &lt;code&gt;postinstall&lt;&#x2F;code&gt; de son projet.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;a-quoi-ca-sert&quot;&gt;A quoi ça sert ?&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;Réutiliser du code C ou C++ existant dans votre base de code d&#x27;entreprise ;&lt;&#x2F;li&gt;
&lt;li&gt;utiliser des librairies binaires : statiques (.a) ou dynamiques (.so &#x2F; .dylib &#x2F; .dll), potentiellement des librairies tierces non libres ;&lt;&#x2F;li&gt;
&lt;li&gt;viser des performances natives, ce qui peut être intéressant pour certains algorithmes ;&lt;&#x2F;li&gt;
&lt;li&gt;avoir accès aux ressources systèmes, non accessibles depuis Javascript (I&#x2F;O, ports séries, GPU …) ;&lt;&#x2F;li&gt;
&lt;li&gt;utiliser des worker threads pour des algorithmes plus intéressants en multi-threading (il est possible, depuis Node 10.5, de faire du multi-threading en Javascript, mais cela reste expérimental et limité) ;&lt;&#x2F;li&gt;
&lt;li&gt;typer statiquement une librairie.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;les-anti-patterns&quot;&gt;Les anti-patterns&lt;&#x2F;h2&gt;
&lt;p&gt;A ce stade, on pourrait être tenter de réaliser toute son application sous forme d&#x27;addon ! Ce n&#x27;est pas le but et il y a quelques anti-patterns à connaitre :&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;vouloir ré-écrire l&#x27;event-loop : Node a été conçu pour ça, libuv est &amp;quot;battle tested&amp;quot; ;&lt;&#x2F;li&gt;
&lt;li&gt;faire des I&#x2F;O intensif : là encore, c&#x27;est la force de libuv ;&lt;&#x2F;li&gt;
&lt;li&gt;uniquement typer un programme : si le côté dynamique de Javascript vous dérange, d&#x27;autres approches sont plus productives :
&lt;ul&gt;
&lt;li&gt;Js as a Bytecode : avoir un langage typé statiquement qui compile vers Javascript, tel que OCaml + Js_of_ocaml, F# + Fable, ou Purescript. Ces compilateurs apportent beaucoup d&#x27;optimisations et ces langages sont plus sûrs que C++ ;&lt;&#x2F;li&gt;
&lt;li&gt;Webassembly : quand vous êtes dans un langage ne disposant pas d&#x27;un bon compilateur vers JS mais disposant d&#x27;un compilateur WASM (ex : Rust). C&#x27;est d&#x27;ailleurs l&#x27;objectif de WASM, servir d&#x27;assembleur pour le web et d&#x27;éviter le passage par JS. De plus Node.js peut tout à fait charger un module WASM.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;Donc je peux utiliser Javascript et C++ en même temps&lt;&#x2F;strong&gt;
&lt;img src=&quot;..&#x2F;img&#x2F;large.png&quot; alt=&quot;Large amount of code&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;C++ est un langage qui cumule beaucoup de problématiques : unsound, unsafe, manque d&#x27;outillage ...
Néanmoins c&#x27;est un langage parfois utile pour faire des programmes &lt;em&gt;bas niveau&lt;&#x2F;em&gt; performant.&lt;&#x2F;p&gt;
&lt;p&gt;A titre personnel, j&#x27;utilise &lt;a href=&quot;https:&#x2F;&#x2F;www.rust-lang.org&#x2F;&quot;&gt;Rust&lt;&#x2F;a&gt; pour ce type de besoins. Les avantages de Rust, de manière synthétique sont :&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;un langage &lt;em&gt;Memory Safe&lt;&#x2F;em&gt; ;&lt;&#x2F;li&gt;
&lt;li&gt;un compilateur qui bloque la plupart des erreurs de runtime ;&lt;&#x2F;li&gt;
&lt;li&gt;un interfaçage facile avec C&#x2F;C++ ;&lt;&#x2F;li&gt;
&lt;li&gt;la programmation générique ;&lt;&#x2F;li&gt;
&lt;li&gt;un système de &lt;em&gt;type ML&lt;&#x2F;em&gt;, incluant types algébriques et filtrage par motifs ;&lt;&#x2F;li&gt;
&lt;li&gt;pas de &lt;em&gt;rammasse miette&lt;&#x2F;em&gt; ;&lt;&#x2F;li&gt;
&lt;li&gt;pas d&#x27;allocation &#x2F; désallocation manuelle de mémoire ;&lt;&#x2F;li&gt;
&lt;li&gt;pas de &lt;em&gt;segmentation fault&lt;&#x2F;em&gt; ;&lt;&#x2F;li&gt;
&lt;li&gt;pas de &lt;em&gt;data race&lt;&#x2F;em&gt; ;&lt;&#x2F;li&gt;
&lt;li&gt;un outillage impressionant ;&lt;&#x2F;li&gt;
&lt;li&gt;compile vers des applications natives, des librairie Rust ou C, du webassembly ou même des addon Node.js&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Effectivement, le projet &lt;a href=&quot;https:&#x2F;&#x2F;neon-bindings.com&#x2F;&quot;&gt;Neon Bindings&lt;&#x2F;a&gt; permet de compiler une librairie Rust vers un addon natif Node et de l&#x27;utiliser directement depuis votre code Javascript.&lt;&#x2F;p&gt;
&lt;p&gt;Vous pouvez découvrir &lt;strong&gt;Neon&lt;&#x2F;strong&gt; avec ces quelques exemples : https:&#x2F;&#x2F;github.com&#x2F;oteku&#x2F;rust-my-node&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;fibo-sync : comparer les performances d&#x27;un calcul &lt;em&gt;couteux&lt;&#x2F;em&gt; (ici un fibonacci naïf) en Javascript et Rust ;
&lt;ul&gt;
&lt;li&gt;Sur des &lt;em&gt;petits calculs&lt;&#x2F;em&gt; (&lt;code&gt;node fibo-sync.js --value 1&lt;&#x2F;code&gt;), Javascript est plus performant : c&#x27;est assez logique nous sommes dans le cas où le &lt;em&gt;coût&lt;&#x2F;em&gt; d&#x27;appel d&#x27;un addon est supérieur au coût du calcul ;&lt;&#x2F;li&gt;
&lt;li&gt;sur de &lt;em&gt;gros calculs&lt;&#x2F;em&gt; (&lt;code&gt;node fibo-sync.js --value 45&lt;&#x2F;code&gt;), on a un gain notable ;&lt;&#x2F;li&gt;
&lt;li&gt;il est aisé, grace au type &lt;code&gt;JsResult&lt;&#x2F;code&gt; de Neon, de passer des erreurs du code Rust au code Javascript (&lt;code&gt;node fibo-sync.js --value 50&lt;&#x2F;code&gt;) ;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;fibo-async : dans un programme Node.js, on prend l&#x27;habitude découper un algorithme couteux en code asynchrone pour ne pas bloquer l&#x27;event loop. Neon offre un trait &lt;code&gt;Task&lt;&#x2F;code&gt; qui permet faciliter la création de code asynchrone dans vos addons et de ne pas bloquer la callstack JS (&lt;code&gt;node fibo-async.js --value 45&lt;&#x2F;code&gt;) ;&lt;&#x2F;li&gt;
&lt;li&gt;foldersize : sert à montrer comment un addon permet de bénéficier de librairies Rust existantes pour les réutiliser au sein d&#x27;un programme Node (&lt;code&gt;node foldersize.js&lt;&#x2F;code&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Ce billet a été rédigé pour servir de pilote au talk Rust my node présenté lors de &lt;a href=&quot;https:&#x2F;&#x2F;www.meetup.com&#x2F;fr-FR&#x2F;LambdaLille&#x2F;events&#x2F;260541114&#x2F;&quot;&gt;Lambda Lille#14&lt;&#x2F;a&gt; et d&#x27;un &lt;a href=&quot;https:&#x2F;&#x2F;www.meetup.com&#x2F;fr-FR&#x2F;NightClazz-Lille-by-Zenika&#x2F;events&#x2F;262219651&quot;&gt;BBL Zenika&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Opérateur pipe en Rust ?</title>
                <pubDate>Fri, 29 Mar 2019 00:00:00 +0000</pubDate>
                <link>https%3A//oteku.github.io/pipe-macro-rust/</link>
                <guid>https%3A//oteku.github.io/pipe-macro-rust/</guid>
                <description>&lt;p&gt;L&#x27;absence d&#x27;opérateur de composition, similaire au &lt;code&gt;.&lt;&#x2F;code&gt; de Haskell, ou de pipeline similaire au &lt;code&gt;|&amp;gt;&lt;&#x2F;code&gt; de ReasonML et OCaml, est assez frustrante lors qu&#x27;on essaie de faire du code Rust déclaratif.&lt;&#x2F;p&gt;
&lt;p&gt;Il est possible d&#x27;envisager la &lt;em&gt;dot notation&lt;&#x2F;em&gt; mais, d&#x27;une part ce n&#x27;est pas totalement satisfaisant et, d&#x27;autre part cela nécessite d&#x27;implémenter des traits pour chacun des types de données qui composent le flux de traitement.&lt;&#x2F;p&gt;
&lt;p&gt;Heureusement la programmation générique et les macros de &lt;strong&gt;Rust&lt;&#x2F;strong&gt; peuvent nous aider à implémenter la composition assez facilement :&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#212733;&quot;&gt;
&lt;span style=&quot;color:#ccc9c2;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5c6773;&quot;&gt;&#x2F;&#x2F; function used to compose
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;fn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffd580;&quot;&gt;compose_two&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;&amp;lt;A, B, C, G, F&amp;gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; F, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;g&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; G) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; impl FnOnce(A) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; C
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;where&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;
    F&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; FnOnce(A) -&amp;gt; B,
    G&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; FnOnce(B) -&amp;gt; C,
{
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;move &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;g&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(x))
}

&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5c6773;&quot;&gt;&#x2F;&#x2F; composition macro
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;macro_rules! &lt;&#x2F;span&gt;&lt;span style=&quot;color:#73d0ff;&quot;&gt;compose &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;{
    ( &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;$last&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;expr &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;{ $last };
    ( &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;$head&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;expr&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;($tail:expr), +) =&amp;gt; {
        compose_two($head, compose!($($tail),&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;))
    };
}
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Maintenant on peut composer des fonctions ainsi :&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#212733;&quot;&gt;
&lt;span style=&quot;color:#ffa759;&quot;&gt;fn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffd580;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;() {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffd580;&quot;&gt;double &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;| x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffd580;&quot;&gt;add2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;| x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; double_then_add2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;compose!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(double&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; add2)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;println!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;quot;Result is &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;{}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;double_then_add2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Grâce à notre macro &lt;code&gt;compose!&lt;&#x2F;code&gt;, nous pouvons également créer une nouvelle macro &lt;code&gt;pipe!&lt;&#x2F;code&gt; :&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#212733;&quot;&gt;
&lt;span style=&quot;color:#ccc9c2;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5c6773;&quot;&gt;&#x2F;&#x2F; function needed to infer type
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;fn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffd580;&quot;&gt;pipe_two&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;&amp;lt;A, B, F&amp;gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; A, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; F) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; B
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;where&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;
    F&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; FnOnce(A) -&amp;gt; B,
{
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(a)
}

&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5c6773;&quot;&gt;&#x2F;&#x2F; pipe macro
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;macro_rules! &lt;&#x2F;span&gt;&lt;span style=&quot;color:#73d0ff;&quot;&gt;pipe &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;{
    ( &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;$last&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;expr &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;{ $last };
    ( &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;$head&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;expr&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;($tail:expr), +) =&amp;gt; {
        pipe_two($head, compose!($($tail),&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;))
    };
}
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Dorénavant, nous pouvons directement pipeliner nos fonctions ainsi :&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#212733;&quot;&gt;
&lt;span style=&quot;color:#ffa759;&quot;&gt;fn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffd580;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;() {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffd580;&quot;&gt;double &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;| x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffd580;&quot;&gt;add2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;| x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;println!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;quot;Result is &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;{}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;pipe!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;double&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; add2))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;println!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;quot;Result is &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;{}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;pipe!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; double&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; add2))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Implémenter un opérateur infixe est un peu plus complexe parce que Rust limite les opérateurs surchargeables à certains opérateurs via le module &lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;std&#x2F;ops&#x2F;index.html&quot;&gt;std::ops&lt;&#x2F;a&gt;, malheureusement &lt;code&gt;|&amp;gt;&lt;&#x2F;code&gt; n&#x27;en fait pas partie. Cependant, il est possible d&#x27;utiliser &lt;code&gt;|&lt;&#x2F;code&gt;, ce qui nous rappelera le pipelining Linux.&lt;&#x2F;p&gt;
&lt;p&gt;Un autre point à prendre en compte est que nous avons besoin d&#x27;un type pour encapsuler nos données, si on veut éviter d&#x27;implémenter le trait &lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;std&#x2F;ops&#x2F;trait.BitOr.html&quot;&gt;BitOr&lt;&#x2F;a&gt; pour chaque type initiant un pipelining.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#212733;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#5c6773;&quot;&gt;&#x2F;&#x2F; Need a wrapper to implement pipe operator
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;struct &lt;&#x2F;span&gt;&lt;span style=&quot;color:#73d0ff;&quot;&gt;Scalar&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;&amp;lt;T&amp;gt;(T)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;use &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;std&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;ops&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;BitOr&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;impl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;&amp;lt;A, B, F&amp;gt; BitOr&amp;lt;F&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span style=&quot;color:#73d0ff;&quot;&gt;Scalar&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;&amp;lt;A&amp;gt;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;where&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; F&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; FnOnce(A) -&amp;gt; B
{
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#73d0ff;&quot;&gt;Output &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Scalar&amp;lt;B&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;

    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;fn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffd580;&quot;&gt;bitor&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; F) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;-&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;Scalar&amp;lt;B&amp;gt; {
        Scalar(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5ccfe6;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;))
    }
}

&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5c6773;&quot;&gt;&#x2F;&#x2F; Need an unwrapping function
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;impl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;&amp;lt;T&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#73d0ff;&quot;&gt;Scalar&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;&amp;lt;T&amp;gt; {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;fn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffd580;&quot;&gt;unwrap&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; T{
        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5ccfe6;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;0
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;}
}
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Ce qui nous permet enfin d&#x27;écrire :&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#212733;&quot;&gt;
&lt;span style=&quot;color:#ffa759;&quot;&gt;fn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffd580;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;() {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffd580;&quot;&gt;double &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;| x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffa759;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffd580;&quot;&gt;add2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;| x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;println!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;quot;Result is &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;{}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bae67e;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;(Scalar(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ffcc66;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; double &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt; add2)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29e74;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f28779;&quot;&gt;unwrap&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2cc;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ccc9c2;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;On peut donc conclure qu&#x27;avec peu de boilerplate, il est relativement aisé de composer des fonctions en Rust. Pour ma part, je trouve qu&#x27;implémenter l&#x27;opérateur infixe amène une complexité supplémentaire, à cause de la nécessité de mettre en place les &lt;em&gt;wrapping&lt;&#x2F;em&gt; et &lt;em&gt;unwrapping&lt;&#x2F;em&gt;, c&#x27;est pourquoi je préfère utiliser les macros dans mon code.&lt;&#x2F;p&gt;
</description>
            </item>
        
    </channel>
</rss>
